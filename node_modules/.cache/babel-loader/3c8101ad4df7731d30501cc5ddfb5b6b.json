{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const ValueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n\n    const InputBlurHandler = event => {\n      setIsTouched(true);\n    };\n\n    const reset = () => {\n      setEnteredValue('');\n      setIsTouched(false);\n    };\n\n    return {\n      value: enteredValue,\n      isValid: valueIsValid,\n      hasError,\n      valueChangeHandler,\n      inputBlurHandler,\n      reset\n    };\n  };\n};\n\n_s(useInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/hcove/OneDrive/Desktop/launchcode_work/UdemySection16/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","ValueIsValid","hasError","valueIsValid","valueChangeHandler","event","target","value","InputBlurHandler","reset","isValid","inputBlurHandler"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACC,YAAD,IAAiBJ,SAAlC;;AAEA,QAAMK,kBAAkB,GAAIC,KAAD,IAAW;AAClCP,IAAAA,eAAe,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;;AAEJ,UAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAC5BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFP;;AAIA,UAAMS,KAAK,GAAG,MAAM;AAChBX,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHH;;AAKA,WAAO;AACNO,MAAAA,KAAK,EAAEV,YADD;AAENa,MAAAA,OAAO,EAAEP,YAFH;AAGND,MAAAA,QAHM;AAINE,MAAAA,kBAJM;AAKNO,MAAAA,gBALM;AAMNF,MAAAA;AANM,KAAP;AAQC,GApBD;AAqBH,CA5BD;;GAAMd,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useInput = (validateValue) => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const ValueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        setEnteredValue(event.target.value);\r\n\r\n    const InputBlurHandler = (event) => {\r\n            setIsTouched(true);\r\n          };\r\n        \r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n      };\r\n\r\n    return {\r\n     value: enteredValue, \r\n     isValid: valueIsValid,\r\n     hasError,\r\n     valueChangeHandler,\r\n     inputBlurHandler,\r\n     reset\r\n        };\r\n    };\r\n};\r\n\r\n\r\nexport default useInput;"]},"metadata":{},"sourceType":"module"}